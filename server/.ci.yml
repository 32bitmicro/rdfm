image: $CI_REGISTRY_IMAGE:rdfm-ci-base

variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip

cache:
  key: "$CI_PIPELINE_ID"
  paths:
    - device/target/
    - client/
    - server/
    - .cargo/
    - .cache/pip/

.build:
  before_script:
    - python -V
    - |
      if [[ -d device/target ]]; then
        exit 0
      fi
    - apt-get -y install make netcat openssl
    - . $HOME/.cargo/env
    - cd device && cargo build && cd ..
    - cd server && poetry build && poetry install && python -m build && pip3 install -e . && cd ..
    - cd client && poetry build && poetry install && python -m build && pip3 install -e . && cd ..
    - export JWT_SECRET="testsecret123123123"

stages:
  - build
  - static-checks
  - local-tests

build:
  extends: .build
  stage: build
  script:
    - echo "Build finished"

python-check:
  extends: .build
  stage: static-checks
  script:
    - cd server && poetry run test && cd ..
    - cd client && poetry run test && cd ..
  only:
    refs:
      - merge_requests
      - main

rust-check:
  extends: .build
  stage: static-checks
  script:
    - cd device && cargo fmt --all -- --check && cargo test && cd ..
  only:
    refs:
      - merge_requests
      - main

test-arguments:
  extends: .build
  stage: local-tests
  script:
    - python3 tests/test-arguments.py
  only:
    refs:
      - merge_requests
      - main

test-list-devices:
  extends: .build
  stage: local-tests
  script:
    - python3 tests/test-list-devices.py
  only:
    refs:
      - merge_requests
      - main

test-proxy:
  extends: .build
  stage: local-tests
  script:
    - |
      echo "shell_connect = true" > 'capabilities.toml'
      echo "file_transfer = false" >> 'capabilities.toml'
      echo "exec_cmds = false" >> 'capabilities.toml'
    - python3 tests/test-proxy.py
  only:
    refs:
      - merge_requests
      - main

test-metadata:
  extends: .build
  stage: local-tests
  script:
    - python3 tests/test-metadata.py
  only:
    refs:
      - merge_requests
      - main

test-crash-client-input:
  extends: .build
  stage: local-tests
  script:
    - apt-get install telnet
    - python3 tests/test-crash-client-input.py
  only:
    refs:
      - merge_requests
      - main

test-file-transfer:
  extends: .build
  stage: local-tests
  script:
    - echo "file_transfer = true" > 'capabilities.toml'
    - python3 tests/test-file-transfer.py
  only:
    refs:
      - merge_requests
      - main

test-package-api:
  extends: .build
  stage: local-tests
  script:
    - python3 tests/test-packages.py
  only:
    refs:
      - merge_requests
      - main

