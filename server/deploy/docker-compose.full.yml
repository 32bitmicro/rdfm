services:
  rdfm-server:
    image: rdfm:server
    build:
      dockerfile: server/deploy/Dockerfile
      context: ../../
    restart: unless-stopped
    env_file: $SETUP_FILE
    depends_on:
      - keycloak
      - postgres
    environment:
      REQUESTS_CA_BUNDLE: /certs/CA.crt
    networks:
      - rdfm
    volumes:
      - ${PWD}/server/deploy/certs:/certs

  frontend:
    image: rdfm:frontend
    build:
      dockerfile: frontend/Dockerfile
      context: ../../
      args:
        setup_file: server/deploy/$SETUP_FILE
    restart: unless-stopped
    env_file: $SETUP_FILE
    depends_on:
      - keycloak
      - rdfm-server
    ports:
      - "${RDFM_FRONTEND_PORT}:${RDFM_FRONTEND_PORT}"
    volumes:
      - ${PWD}/server/deploy/nginx.conf:/etc/nginx/templates/default.conf.template
      - ${PWD}/server/deploy/certs:/etc/nginx/certs/
    networks:
      - rdfm

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    restart: unless-stopped
    env_file: $SETUP_FILE
    networks:
      - rdfm
    command:
      - start
      - --import-realm
    volumes:
      - ${PWD}/server/deploy/certs:/certs
      - keycloak:/opt/keycloak/data/
      - ${PWD}/server/keycloak-themes/:/opt/keycloak/themes
      - ${PWD}/frontend/public/assets/:/opt/keycloak/themes/rdfm/login/resources/img/
      - ${PWD}/server/deploy/rdfm-realm-template.json:/opt/keycloak/data/import/rdfm-realm.json

  postgres:
    image: postgres:16.2
    env_file: $SETUP_FILE
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - rdfm
    volumes:
      - db:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2021-04-22T15-44-28Z
    env_file: $SETUP_FILE
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - rdfm
    volumes:
      - storage:/storage/
      - ${PWD}/server/deploy/certs/MINIO.crt:/root/.minio/certs/public.crt:ro
      - ${PWD}/server/deploy/certs/MINIO.key:/root/.minio/certs/private.key:ro
      - ${PWD}/server/deploy/certs/CA.crt:/root/.minio/certs/CAs/CA.crt:ro
    environment:
      MINIO_ROOT_USER: ${RDFM_S3_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${RDFM_S3_ACCESS_SECRET_KEY}
      MINIO_SERVER_URL: ${RDFM_S3_URL}
    command: server /storage/

  minio-bucket-creator:
    image: minio/mc:RELEASE.2021-04-22T17-40-00Z
    env_file: $SETUP_FILE
    restart: on-failure
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        set -e
        /usr/bin/mc config host add rdfm-minio ${RDFM_S3_URL} ${RDFM_S3_ACCESS_KEY_ID} ${RDFM_S3_ACCESS_SECRET_KEY};
        /usr/bin/mc mb rdfm-minio/${RDFM_S3_BUCKET} || true;
        exit 0;
      "
    volumes:
      - ${PWD}/server/deploy/certs/CA.crt:/root/.mc/certs/CAs/CA.crt:ro
    networks:
      - rdfm

volumes:
  keycloak:
  storage:
  db:

networks:
  rdfm:
